name: DRBD RPM Build and Release

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday
  workflow_dispatch:
    inputs:
      drbd_version:
        description: 'DRBD Version'
        required: false
        default: '9.1.23'
      drbd_release:
        description: 'DRBD Release'
        required: false
        default: '1'
  push:
    tags:
      - 'v*'
    paths:
      - 'Dockerfile'
      - 'scripts/**'
      - '.github/workflows/drbd-build.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set DRBD version variables
        id: vars
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "DRBD_VERSION=${{ github.event.inputs.drbd_version }}" >> $GITHUB_ENV
            echo "DRBD_RELEASE=${{ github.event.inputs.drbd_release }}" >> $GITHUB_ENV
          else
            echo "DRBD_VERSION=9.1.23" >> $GITHUB_ENV
            echo "DRBD_RELEASE=1" >> $GITHUB_ENV
          fi
          echo "BUILD_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          
          # Extract version from tag if present
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG_VERSION=${GITHUB_REF#refs/tags/v}
            echo "RELEASE_VERSION=${TAG_VERSION}" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: drbd-builder:latest
          build-args: |
            DRBD_VERSION=${{ env.DRBD_VERSION }}
            DRBD_RELEASE=${{ env.DRBD_RELEASE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run DRBD build
        run: |
          docker run --name drbd-builder drbd-builder
          mkdir -p output
          docker cp drbd-builder:/root/output/. output/
          docker rm drbd-builder

      - name: Generate build metadata
        run: |
          echo "Build Information" > output/metadata.txt
          echo "----------------" >> output/metadata.txt
          echo "Date: ${{ env.BUILD_DATE }}" >> output/metadata.txt
          echo "DRBD Version: ${{ env.DRBD_VERSION }}" >> output/metadata.txt
          echo "DRBD Release: ${{ env.DRBD_RELEASE }}" >> output/metadata.txt
          echo "Commit: ${{ github.sha }}" >> output/metadata.txt
          echo "Workflow: ${{ github.workflow }}" >> output/metadata.txt
          
          # List all RPMs
          echo -e "\nBuilt RPMs:" >> output/metadata.txt
          find output/RPMS -type f -name "*.rpm" -exec basename {} \; >> output/metadata.txt

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: DRBD ${{ env.RELEASE_VERSION }}
          body_path: output/metadata.txt
          files: |
            output/RPMS/x86_64/*.rpm
            output/build_report.txt
            output/metadata.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v3
        with:
          name: drbd-rpms-${{ env.BUILD_DATE }}
          path: |
            output/RPMS/x86_64/*.rpm
            output/build_report.txt
            output/metadata.txt
          retention-days: 7

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Build failed: DRBD RPM build on ${process.env.BUILD_DATE}`,
              body: `Build failed for DRBD version ${process.env.DRBD_VERSION}\n\nSee workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            }); 